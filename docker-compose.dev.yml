version: '3.8'

services:  # Ollama AI Service pour développement
  ollama:
    image: ollama/ollama:latest
    container_name: portfolio-ollama-dev
    ports:
      - "11434:11434"
    volumes:
      - ollama_dev_data:/root/.ollama
      - ./scripts:/scripts
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
    restart: unless-stopped
    networks:
      - portfolio_dev_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    entrypoint: ["/bin/bash", "-c"]
    command: >
      "ollama serve &
      sleep 10 &&
      ollama pull qwen3:1.7b &&
      ollama pull qwen3:0.6b &&
      ollama pull nomic-embed-text &&
      echo 'Modèle qwen3:1.7b et qwen3:0.6b téléchargé avec succès!' &&
      wait"
  # ChromaDB Vector Database pour développement
  chromadb:
    image: chromadb/chroma:latest
    container_name: portfolio-chromadb-dev
    ports:
      - "8001:8000"
    volumes:
      - chroma_dev_data:/chroma/chroma
    environment:
      - CHROMA_HOST=0.0.0.0
      - CHROMA_PORT=8000
      - ALLOW_RESET=TRUE
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["http://localhost:4200","http://localhost:1337"]
      - ANONYMIZED_TELEMETRY=FALSE
    restart: unless-stopped
    networks:
      - portfolio_dev_network
    depends_on:
      - ollama
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # PostgreSQL pour développement Strapi (inclus par défaut)
  postgres-dev:
    image: postgres:15-alpine
    container_name: portfolio-postgres-dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-strapi_dev}
      POSTGRES_USER: ${POSTGRES_USER:-strapi}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-strapi123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - portfolio_dev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U strapi"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  ollama_dev_data:
    driver: local
  chroma_dev_data:
    driver: local
  postgres_dev_data:
    driver: local

networks:
  portfolio_dev_network:
    driver: bridge
